// OPTIMIZATION PARAMETERS
// TOP OPT NAME: Re[Re_value]_[V_r]_[OPT METHOD]_[beta2/beta3]_[beta2/beta4]_time[stat]_tend[endTime]_[deltaT]_a[alpha]_q[q_value][normalV]_[optBox]_[parabolicInlet]
Vr[0.33]_goc_a1e5_b[1_1_0_0]

// optimization scheme (0:MMA, 1:GOC)
0

// stationary flag : (1 stationary,  0 time dependent)
0

// DEFINE OPTIMIZATION REGIONS (specify subdomains)
// n subdomains
11
// initial gamma values for each subdomain (0.0:full, 1.0: empty)
1.0 1.0 1.0 1.0 1.0 0.0 1.0 1.0 1.0 1.0 1.0
//n opt subdomains
7
// optimization subdomains
5 4 6 3 7 2 8

// q  α(γ) ≡ αmin + (αmax − αmin)*[q(1 − γ)]/(q + γ)
1

// V_r (desired maximum fraction of fluid volume)
0.33

// αmin
0

// αmax
1e5

// BASE FUNCTIONALS:
            | 0: alpha*||U||^2
            | 1: alpha*||U||^2 + 1/2*mu ||grad(u) + grad(u)^T||^2
// onlygrad
0

// min iter
10

// maxIter
1000

// custom functional: 0 use funcID; 1 use following formulation
1
// FUNCTIONAL: 
// INT_OMEGA{ beta1*alpha*||u||^2  +  beta2*1/2*mu*||grad(u)+grad(u)^T||^2  +  beta3*1/2*mu*||curl(u)||^2 }  +  beta4 * INT_GAMMA_in{p} +  // INT__OMEGA { beta5 * 1/2*rho * ||u||^2}
// beta1    beta2    beta3    beta4 
1 1 0 0

// GAMMA CHANGE TOLERANCE
0.00001

// USE GAMMA PROJECTOR ( 0: no; 1: p(gamma) = -2gamma^3 + 3*gamma^2; 2: p(gamma) = [tanh(beta*alpha) + tanh*beta*(gamma_node-alpha)] / [tanh(beta*alpha) + tanh(beta*(1-alpha))] )
0
// beta MAX
10
//beta min
0.1
// activate beta interpolation procedure (0: beta fixed to beta_min for all iterations, 1: beta interpolated untill beta_max depending on gamma change)
1
// change max to turn on beta interpolation
0.001
// change min to turn off beta interpolation
0.00001
// crit change to determine the q_beta for beta interpolation
0.0005
// crit beta to determine the q_beta for beta interpolation
5

// USE DIFFUSIVE FILTER FOR THE TOP. OPT. PARAMETER (0: no filter, 1: artihmetic mean, 2: geometric mean)
0
// DIFFUSION RADIUS PERCENTAGE (relative to the smaller side of the Top. Opt. box)
0.01
// DIFFUSION FILTER WEIGHT
0.8

//--------------------------------- PRINT ---------------------------------------------------------------------
// BINARY PRINT (1: true)
0

// FLAG PRINT: 
            | 0: print only gamma solution at the final geometry
            | 1: print gamma solution every "deltaPrint" iteration and velocity/pressure at the final geometry
            | 2: print gamma and velocity/pressure solution every "deltaPrint" iteration
// flag_print
2

// deltaPrint
1

// write on finer mesh (0: pressure mesh, 1: velocity mesh)
1